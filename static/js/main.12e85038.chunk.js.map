{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","search","setSearch","useEffect","getUsers","fetch","then","response","json","data","className","id","type","placeholder","value","onChange","e","target","map","user","name","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA+CeA,MA5Cf,WAAgB,IAAD,EAEYC,mBAAS,IAFrB,mBAENC,EAFM,KAEAC,EAFA,OAGcF,mBAAS,IAHvB,mBAGNG,EAHM,KAGCC,EAHD,KAKbC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,WACfC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACG,GAAD,OAAQT,EAASS,OAIzB,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,uBAAOC,GAAG,QAAQC,KAAK,OAAOC,YAAY,eAAeC,MAAOb,EAC1Dc,SAAU,SAACC,GAAD,OAAKd,EAAUc,EAAEC,OAAOH,UAClC,6BACI,KAAXb,EACGF,EAAMmB,KAAI,SAAAC,GAAI,OACZ,6BACCA,EAAKC,UAINrB,EAAMsB,QAAO,SAACF,GAAD,OAAQA,EAAKC,KAAKE,cAC9BC,SAAStB,EAAOqB,kBAAgBJ,KAAI,SAACC,GAAD,OACjC,6BACCA,EAAKC,kBCvBPI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.12e85038.chunk.js","sourcesContent":["import './App.css';\nimport {useState,useEffect} from 'react'\n\nfunction App() {\n\n  const [users,setUsers] = useState([]);\n  const [search,setSearch] = useState(\"\");\n  \n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = () =>{\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response)=>response.json())\n    .then((data)=>setUsers(data))\n  }\n\n\n  return (\n    <div className=\"App\">\n      <form>\n        <input id=\"buton\" type=\"text\" placeholder=\"Search names\" value={search}\n              onChange={(e)=>setSearch(e.target.value)}/>\n              <ul>\n      {search === \"\" ? (\n          users.map(user=>\n            <li>\n            {user.name}\n            </li>\n          )\n        ) : (\n            users.filter((user)=>user.name.toLowerCase()\n            .includes(search.toLowerCase())).map((user)=>(\n                <li>\n                {user.name}\n                </li>\n              )\n            )\n        )\n        }\n      </ul>\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}